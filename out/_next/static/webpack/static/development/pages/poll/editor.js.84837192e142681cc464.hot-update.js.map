{"version":3,"file":"static/webpack/static\\development\\pages\\poll\\editor.js.84837192e142681cc464.hot-update.js","sources":["webpack:///./redux/actions/pollsActions/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport { asyncTypes } from '../../types';\r\n\r\nconst { apiUrl } = process.env;\r\n\r\nexport function getPollAction(payload) {\r\n  return {\r\n    type: asyncTypes.GET_POLL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function getPreviewAction(payload) {\r\n  return {\r\n    type: asyncTypes.GET_PREVIEW_POLL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function postPollAction(payload) {\r\n  return {\r\n    type: asyncTypes.POST_POLL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function updatePollAction(payload) {\r\n  return {\r\n    type: asyncTypes.UPDATE_POLL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function deletePollAction(payload) {\r\n  return {\r\n    type: asyncTypes.DELETE_POLL,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function getPollsAction(payload) {\r\n  return {\r\n    type: asyncTypes.GET_POLLS,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function getAllPollsAction(payload) {\r\n  return {\r\n    type: asyncTypes.GET_ALL_POLLS,\r\n    payload,\r\n  };\r\n}\r\n\r\n\r\nexport function getAllPollsStartAction() {\r\n  return {\r\n    type: asyncTypes.GET_ALL_POLLS_START,\r\n  };\r\n}\r\n\r\n\r\nexport function getAllPollsErrorAction(payload) {\r\n  return {\r\n    type: asyncTypes.GET_ALL_POLLS_ERROR,\r\n    payload,\r\n  };\r\n}\r\n\r\n\r\nexport function getPoll(slug) {\r\n  const endPoint = `${apiUrl}polls/${slug}`;\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(endPoint);\r\n      dispatch(getPollAction(response.data.poll));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function getPreview(poll) {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(getPreviewAction(poll));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function postPoll(poll) {\r\n  const endPoint = `${apiUrl}polls`;\r\n  const auth = JSON.parse(localStorage.getItem('auth'));\r\n  axios.defaults.headers.authorization = auth.token;\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(endPoint, {\r\n        id: poll.id,\r\n        user: auth.id,\r\n        css: poll.css,\r\n        js: poll.js,\r\n        name: poll.name,\r\n        desc: poll.desc,\r\n        slug: poll.slug,\r\n        lastDesc: poll.lastDesc,\r\n        questions: poll.questions,\r\n        answers: poll.answers,\r\n        settings: poll.settings,\r\n        selectableLastMessages: poll.selectableLastMessages,\r\n      });\r\n      dispatch(postPollAction(response.data));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function updatePoll(poll) {\r\n  const endPoint = `${apiUrl}polls/update`;\r\n  const auth = JSON.parse(localStorage.getItem('auth'));\r\n  axios.defaults.headers.authorization = auth.token;\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.post(endPoint, {\r\n        _id: poll._id,\r\n        user: auth.id,\r\n        css: poll.css,\r\n        js: poll.js,\r\n        name: poll.name,\r\n        desc: poll.desc,\r\n        slug: poll.slug,\r\n        lastDesc: poll.lastDesc,\r\n        questions: poll.questions,\r\n        answers: poll.answers,\r\n        settings: poll.settings,\r\n        selectableLastMessages: poll.selectableLastMessages,\r\n      });\r\n      dispatch(updatePollAction(response.data));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n// AXIOS\r\nexport function deletePoll(_id) {\r\n  const endPoint = `${apiUrl}polls/${_id}`;\r\n  const auth = JSON.parse(localStorage.getItem('auth'));\r\n  axios.defaults.headers.authorization = auth.token;\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { polls } = getState().polls;\r\n      const newPolls = polls.filter(poll => poll._id !== _id);\r\n      const response = await axios.delete(endPoint, _id);\r\n      const { message } = response.data;\r\n      dispatch(deletePollAction({ newPolls, message }));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\n// AXIOS\r\nexport function getPolls() {\r\n  const auth = JSON.parse(localStorage.getItem('auth'));\r\n  const endPoint = `${apiUrl}polls/user/${auth.id}`;\r\n  axios.defaults.headers.authorization = auth.token;\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await axios.get(endPoint);\r\n      dispatch(getPollsAction(response.data));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n}\r\n\r\nexport function getAllPolls(page) {\r\n  const endPoint = `${apiUrl}polls/all/${page}`;\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(getAllPollsStartAction());\r\n      const response = await axios.get(endPoint, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      });\r\n      dispatch(getAllPollsAction(response.data));\r\n    } catch (error) {\r\n      dispatch(getAllPollsErrorAction(error));\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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","sourceRoot":""}